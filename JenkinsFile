pipeline {
  agent any;



  stages {
    stage("GIT") {
      steps {
        sh 'git checkout Projet1_MF'
        sh 'git pull origin Projet1_MF'
      }
    }
    stage("MAVEN BUILD") {
      steps {
        sh 'mvn clean install -Dmaven.test.skip=true'
      }
    }
    stage("MOCKITO") {
          steps {
            sh "mvn test -Dtest=tn.esprit.spring.services.SkierServiceImpMock"
          }
        }
    stage("SONARQUBE JACOCO") {
      steps {
       sh "mvn sonar:sonar -Dsonar.login=admin -Dsonar.password=sonar"
      }
    }


stage('MVN NEXUS')
        {
        steps {
        sh 'mvn  deploy -DskipTests'
        }
        }




   stage("BUILD DOCKER IMAGE") {
        steps {
          sh 'docker build -t mhamedfray007/mhamedfray-5bi7-g5-gestion-station-ski:latest  --build-arg JAR_URL=http://192.168.56.2:8081/repository/vprofile-release/tn/esprit/spring/gestion-station-ski/1.0/gestion-station-ski-1.0.jar .'
        }
      }
      stage('Deploy Docker Image') {
        steps {
          withCredentials([string(credentialsId: 'pass', variable: 'DOCKER_PASSWORD')]) {
            sh '''
              docker login -u mhamedfray007 -p $DOCKER_PASSWORD
              docker push mhamedfray007/mhamedfray-5bi7-g5-gestion-station-ski
            '''
          }
        }
      }
      stage('Docker Compose') {
        steps {
          sh 'docker-compose up -d'
        }
      }
      }
       post {
                               always {
                                       emailext subject: "Pipeline Failed",
                                                body: "There was a failure in the pipeline.",
                                                to: "fraymhamed8@gmail.com",
                                                from: "fraymhamed8@gmail.com",
                                                mimeType: 'text/plain',
                                                attachmentsPattern: 'logs/*.log',
                                                replyTo: "fraymhamed8@gmail.com"
                                   }
                               }

                    }


