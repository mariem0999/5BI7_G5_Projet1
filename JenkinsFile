pipeline {
  agent any;



  stages {
    stage("GIT") {
      steps {
        sh 'git checkout Projet1_MF'
        sh 'git pull origin Projet1_MF'
      }
    }
    stage("MAVEN BUILD") {
      steps {
        sh 'mvn clean install -Dmaven.test.skip=true'
      }
    }
    stage("SONARQUBE") {
      steps {
       sh "mvn sonar:sonar -Dsonar.login=admin -Dsonar.password=sonar"
      }
    }
    stage("MOCKITO") {
      steps {
        sh "mvn test -Dtest=tn.esprit.spring.services.SkierServiceImpMock"
      }
    }

stage('MVN NEXUS')
        {
        steps {
        sh 'mvn  deploy -DskipTests  '
        }
        }


  }

   stage("BUILD DOCKER IMAGE") {
        steps {
          sh 'docker build -t mhamedfray007/gestion-station-ski:latest .'
        }
      }
      stage('Deploy Docker Image') {
        steps {
          withCredentials([string(credentialsId: 'pass', variable: 'DOCKER_PASSWORD')]) {
            sh '''
              docker login -u mhamedfray007 -p $DOCKER_PASSWORD
              docker push mhamedfray007/gestion-station-ski
            '''
          }
        }
      }
      stage('Docker Compose') {
        steps {
          sh 'docker-compose up -d'
        }
      }




}